SIM←{
    0::⎕SIGNAL ⎕EN
    CUT←(1 1↓¯1 ¯1↓⊢)⍣⍺.edge
    EDGE←{m n←(⍴o←⍵)-1 ⋄ o[0 m;]←o[2(m-2);] ⋄ o[;0 n]←o[;2(n-2)] ⋄ o}⍣⍺.edge
    N2←(,2-⍳3 3){a b←⍺ ⋄ a⊖b⌽⍵}¨⊂
    FIX←{v←⍵≥0 ⋄ ((~v)/⍥,⍵⌷⍨∘(⊃⍤⍒)⍤1⍥(↑[-÷2]N2)(?≠⍨⍵)×v×⊃(⊂⍵)+.=N2 ⍵)@(~v⍨)⊢⍵}⍣≡
    CIRCLE←{o←(×⍨⍵)>+.×⍨¨(⍳2⍴s)+0.5(⊣-⊣×⊢)s←2×2×⍵ ⋄ q←(1 1 1 Euler.QAD 63.8)(4⍴0) ⋄ o q}
    RANDOM←{w h n←⍵ ⋄ q←↓⍉↑Euler.RND n ⋄ o←?h w⍴n ⋄ o q}
    INPUT←{                                                                      ⍝ microstructure
        2|⎕DR ⍵:{1=≢⍵:CIRCLE ⍵ ⋄ 3=≢⍵: RANDOM ⍵}⍵                                ⍝   generate
        ⍝ TODO: txt
        _←0 PRT ⍵,' ',⍕≢(e⊢←EBSD.Read ⍵).x ⋄ e⊢←⍺.crop EBSD.Crop⍣(0∨.≠⍺.crop)⊢e  ⍝   read and crop
        ea o←⍺.dang EBSD.Orientations e                                          ⍝   euler angles and micro
        (FIX ¯1@(⍺.(ci iq)∘{(⍴o)⍴⊃⍺∨.>e.(ci iq)})o)(↓⍉↑Euler.QE↓⍉↑ea)            ⍝   fixed micro and quaternions
    }
    CB←⍺∘{o a t T←⍵                                                              ⍝ callback
        td⍪←{⍵⊣⎕←12 ¯6⍕⍵}⍣(⍺.verbose>1)⊢t T,⍺.dx×EBSD.Diameter c←CUT o           ⍝   time and diameter
        _←{⍵.Callback c(CUT¨a)t}⍣(0≠⊃⍺.⎕NC'Callback')⊢⍺                          ⍝   user callback
        o←EDGE o ⋄ t<to+⍺.tout:o a t T                                           ⍝   fix edge
        to⊢←t ⋄ o a t T⊣1 PRT(WRT o to),' ',⍕≢,c                                 ⍝   write output
    }
    LF←⍺∘{o tg T t←⍵                                                             ⍝ local field
        ∆tg←⍺.wkt×(1.380649e¯23÷g.A ⍺.dx)×T×1-2×?≠⍨tg ⋄ ∆tg ⋄ 0∊⍴e:∆tg           ⍝   thermal noise
        ∆tg←⍺{⍵+⍺.wci×(1-e.ci⍴⍨⍴o)×1-2×?≠⍨⍵}⍣(⍺.wci>0)⊢tg                        ⍝   ci noise
        ⍺{⍵+⍺.iq×g×(⍴o)⍴1-(⊢÷⌈/)e.iq}⍣(⍺.iq>0)⊢∆tg                               ⍝   iq push
    }
    WRT←⍺.out{~0∊⍴e:EWRT ⍵ ⋄ o t←⍵ ⋄ f⊣(⊂↓⍕o)⎕NPUT(f←⍺⍺,'_','.txt',⍨1↓0 4⍕t)1}   ⍝ write output
    EWRT←⍺.out{o t←⍵ ⋄ e.ea←e.g[,|o] ⋄ e EBSD.Write ⍺⍺,'_',1↓0 4⍕t}              ⍝ write ebsd file
    PRT←(⍺.verbose>1){⎕←(35↑''),⍣⍺⍺⊢'<>'[⍺],' ',⍵}⍣(⍺.verbose>0)                 ⍝ print in(0)/out(1)
    e←⍬ ⋄ td←0 3⍴⍬ ⋄ o q←⍺ INPUT ⍺.input ⋄ _←1 PRT(WRT o 0),' ',⍕≢,o             ⍝ read input
    ⍺.dx←{e.d}⍣(⍺.dx=0)⊢⍺.dx ⋄ o←EDGE CUT⍣¯1⊢o                                   ⍝ init
    w←⍺.tout{                                                                    ⍝ output steps
        t←+\⍺{(⍺|⍵),⍨⍣(0≠⍺|⍵)⊢⍺/⍨⌊⍵÷⍺}⊃⌽w←+\⊃¨⍵                                  ⍝   time steps
        ↓⍉↑(-2-/0,{⍵[⍋⍵]}∪t,w)((⊃∘⌽¨⍵)[0,¯1↓(0,w)⍸{⍵[⍋⍵]}∪t,w])                  ⍝   temp at each step
    },⊆⍵
    ~(⊂⍺.grid)∊'Moore' 'VonNewmann' 'Hexagonal':⎕SIGNAL 6 ⋄ g←⍎⍺.grid
    to←0 ⋄ o a t T←w CB _SIM_ LF⍨o q,⍺.(ddis lagb hagb G0 M0 Qg A n flip f3 f4 fg dtmin kmodel dx),g
    to←t-⍺.tout ⋄ _←⍺.out{(Euler.EA↓⍉↑⍵)⎕CSV⍠'IfExists' 'Replace'⊢⍺,'_ea.csv'}⍣(0∊⍴e)⊢q
    (CUT⊃CB⍣(0≠⍺.tout|⊃⌽⊃⌽w)⊢o a t T)td
}
